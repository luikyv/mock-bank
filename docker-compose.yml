services:

  mockbank:
    build:
      context: .
      dockerfile: cmd/server/Dockerfile
    environment:
      - ENV=LOCAL
      - AWS_REGION=us-east-1
    ports:
      - "80:80"
    depends_on:
      localstack:
        condition: service_healthy
      psql:
        condition: service_started

  localstack:
    image: localstack/localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=iam,ssm,secretsmanager
      - AWS_ACCESS_KEY_ID="test"
      - AWS_SECRET_ACCESS_KEY="test"
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./testdata/setup-localstack.sh:/etc/localstack/init/ready.d/setup.sh:ro
      - ./testdata/keys/:/keys:ro
    healthcheck:
      test: bash -c 'awslocal ssm get-parameter --name /mockbank/ready >/dev/null 2>&1'
      interval: 5s
      timeout: 10s
      retries: 15
    networks:
      default:
        aliases:
          - localstack.local

  psql:
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: mockbank
    ports:
      - "5432:5432"
    networks:
      default:
        aliases:
          - database.local

  psql-test:
    profiles:
      - test
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: mockbank
    ports:
      - "5432:5432"
    volumes:
      - ./db/migrations:/docker-entrypoint-initdb.d/
    networks:
      default:
        aliases:
          - database.local

  mockgw:
    build:
      context: .
      dockerfile: cmd/mockgw/Dockerfile
    volumes:
      - ./testdata/keys/server.crt:/mocks/server.crt:ro
      - ./testdata/keys/server.key:/mocks/server.key:ro
      - ./testdata/keys/client_one_pub.jwks:/mocks/client.jwks:ro
      - ./testdata/keys/client_two_pub.jwks:/mocks/client2.jwks:ro
      - ./testdata/keys/ca.crt:/mocks/ca.crt:ro
      - ./testdata/keys/org_pub.jwks:/mocks/org.jwks:ro
      - ./testdata/participants.json:/mocks/participants.json:ro
      - ./testdata/directory_jwks.json:/mocks/directory_jwks.json:ro
      - ./testdata/directory_well_known.json:/mocks/directory_well_known.json:ro
      - ./testdata/id_token.json:/mocks/id_token.json:ro
      - ./testdata/software_statement.json:/mocks/software_statement.json:ro
      - ./testdata/software_statement_jwks.json:/mocks/software_statement_jwks.json:ro
    ports:
      - 443:443
    networks:
      default:
        aliases:
          - mockbank.local
          - app.mockbank.local
          - auth.mockbank.local
          - matls-auth.mockbank.local
          - api.mockbank.local
          - matls-api.mockbank.local
          - directory.local
          - matls-directory.local
          - keystore.local

  mockbank-ui:
    profiles:
      - ui
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./mock-bank-ui:/app
    command: sh -c "npm install && npm run dev -- --host"

  migration:
    build:
      context: .
      dockerfile: ./cmd/migration/Dockerfile
    environment:
      - ENV=LOCAL
      - AWS_REGION=us-east-1
    volumes:
      - ./db/migrations:/app/db/migrations:ro
    depends_on:
      localstack:
        condition: service_healthy
      psql:
        condition: service_started

  cs-httpd:
    profiles:
      - conformance
    build:
      context: ./conformance-suite/httpd
      dockerfile: Dockerfile-static
    ports:
      - "8443:8443"
    volumes:
      - ./conformance-suite/src/main/resources/:/usr/local/apache2/htdocs/
    depends_on:
      - cs-server
    networks:
      default:
        aliases:
          - localhost.emobix.co.uk

  cs-server:
    profiles:
      - conformance
    hostname: server
    image: openjdk:17-jdk-slim
    build:
      context: ./conformance-suite/server-dev
    ports:
      - "9999:9999"
    volumes:
      - ./conformance-suite/target/:/server/
    command: >
      java
      -Xdebug -Xrunjdwp:transport=dt_socket,address=*:9999,server=y,suspend=n
      -jar /server/fapi-test-suite.jar
      -Djdk.tls.maxHandshakeMessageSize=65536
      --fintechlabs.base_url=https://localhost.emobix.co.uk:8443
      --fintechlabs.base_mtls_url=https://localhost.emobix.co.uk:8444
      --fintechlabs.devmode=true
      --fintechlabs.startredir=true
      --fintechlabs.yacs.directory.uri=http://directory.local/participants
    depends_on:
      - cs-mongodb
    logging:
      # limit logs retained on host
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "5"

  cs-mongodb:
    profiles:
      - conformance
    image: mongo:latest
    ports:
      - 27017:27017
    networks:
      default:
        aliases:
          - mongodb

volumes:
  maven-cache:
    driver: local
