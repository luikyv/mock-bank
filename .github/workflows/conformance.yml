name: Conformance Suite Tests
on:
    push:
      branches: [main]
    pull_request:
      branches: [main]
    workflow_dispatch:

jobs:

  run-tests:
    runs-on: ubuntu-latest
    env:
      CS_VERSION="3de7a6d5bccbea655519cd4f3e632bf01f9247d9"

    steps:
        - uses: actions/checkout@v4

        - uses: actions/setup-python@v4
          with:
            python-version: '3.x'

        - name: Set Up Dependencies
          run: |
            echo "Installing Python httpx"
            python3 -m pip install httpx

        - name: Cache Conformance Suite Repository
          uses: actions/cache@v3
          id: cache-cs
          with:
            path: ./conformance/suite
            key: cs-${{ env.CS_VERSION }}

        - name: Set Up Conformance Suite
          if: steps.cache-cs.outputs.cache-hit != 'true'
          run: |
            git clone --branch $CS_VERSION --single-branch --depth=1 https://gitlab.com/raidiam-conformance/open-finance/certification.git conformance/suite
            docker compose run cs-builder

        - name: Run Mock Bank With Conformance Suite
          run: |
            docker compose --profile conformance up -d

            echo "Waiting for the mock bank server to be ready"
            timeout 30 bash -c '
              while [ "$(curl -skf -o /dev/null -w "%{http_code}" https://auth.mockbank.localhost/.well-known/openid-configuration)" != "200" ]; do
                echo "Mock Bank server not ready, sleeping for 2 seconds"
                sleep 2
              done
              echo "Mock Bank server is ready"
            ' || {
                echo "Timeout reached before the mock bank server was ready"
                exit 1
            }

            echo "Wait for the conformance suite to be ready"
            timeout 60 bash -c '
            while [ "$(curl -skf -o /dev/null -w ''%{http_code}'' https://localhost:8443/api/runner/available)" != "200" ]; do
              echo "Conformance suite not ready, sleeping for 2 seconds"
              sleep 2
            done
            echo "Conformance suite is ready"
            ' || {
              echo "Timeout reached before the conformance suite is ready"
              exit 1
            }

        - name: Run Tests
          run: |
            make cs-tests

        - name: Upload Test Logs
          uses: actions/upload-artifact@v4
          if: always()
          with:
            name: mockbank
            path: conformance/results/*.zip

  all-tests-succeeded:
    runs-on: ubuntu-latest
    needs: run-tests
    if: success()
    steps:
      - name: Test plans passed
        run: echo "All test plans passed successfully!"
