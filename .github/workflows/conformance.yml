name: Conformance Suite Tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:

  run-tests:
    runs-on: ubuntu-latest
    env:
      CS_VERSION: "6111a8e835350b9270a7443a42329628e62f368f"

    steps:
        - uses: actions/checkout@v4

        - uses: actions/setup-python@v4
          with:
            python-version: '3.x'

        - name: Cache Conformance Suite Repository
          uses: actions/cache@v3
          id: cache-cs
          with:
            path: ./conformance/suite
            key: cs-${{ env.CS_VERSION }}

        - name: Set Up Conformance Suite
          if: steps.cache-cs.outputs.cache-hit != 'true'
          run: |
            make setup-cs
        
        - name: Add Host Entries
          run: |
            echo "127.0.0.1 auth.mockbank.local" | sudo tee -a /etc/hosts

        - name: Start Containers
          run: |
            docker compose --profile conformance up -d

            echo "Wait for the conformance suite to be ready"
            timeout 60 bash -c '
            while [ "$(curl -skf -o /dev/null -w ''%{http_code}'' https://localhost:8443/api/runner/available)" != "200" ]; do
              echo "Conformance suite not ready, sleeping for 2 seconds"
              sleep 2
            done
            echo "Conformance suite is ready"
            ' || {
              echo "Timeout reached before the conformance suite is ready"
              exit 1
            }

            echo "Wait for mock bank to be ready"
            timeout 300 bash -c '
            while [ "$(curl -skf -o /dev/null -w ''%{http_code}'' https://auth.mockbank.local/.well-known/openid-configuration)" != "200" ]; do
              echo "Mock bank not ready, sleeping for 2 seconds"
              sleep 2
            done
            echo "Mock bank is ready"
            ' || {
              echo "Timeout reached before the mock bank is ready"
              exit 1
            }

        - name: Run Tests
          run: |
            make cs-tests

        - name: Upload Test Logs
          uses: actions/upload-artifact@v4
          if: always()
          with:
            name: mockbank
            path: conformance/results/*.zip

  all-tests-succeeded:
    runs-on: ubuntu-latest
    needs: run-tests
    if: success()
    steps:
      - name: Test plans passed
        run: echo "All test plans passed successfully!"